---
import Hero from "./components/Hero.astro";
---

<div class="relative w-full h-screen overflow-hidden">
    <svg
        class=":uno: absolute inset-x-0 top-0 -z-50 h-64rem w-full stroke-gray-200 opacity-10"
        style="-webkit-mask-image: radial-gradient(32rem 32rem at center,white,transparent); mask-image: radial-gradient(32rem 32rem at center,white,transparent); "
        aria-hidden="true">
        <defs>
            <pattern id="patternforpixels" width="100" height="100" x="50%" y="-1" patternUnits="userSpaceOnUse">
                <path d="M.5 200V.5H200" fill="none"> </path>
            </pattern>
        </defs>
        <svg
            x="50%"
            y="0%"
            class=":uno: overflow-visible"
            id="targetSVGElement"
            style="fill: hsl(24, 79%, 70%); transition: fill .5s ease 0s;">
            <path d="M-200 0h201v201h-201Z M600 0h201v201h-201Z M-400 600h201v201h-201Z M200 800h201v201h-201Z" stroke-width="0"> </path>
        </svg>
        <rect width="100%" height="100%" stroke-width="0" fill="url(#patternforpixels)"> </rect>
    </svg>
    <Hero />
</div>

<script>
    let currentColor = {
        h: 24,
        s: 79,
        l: 70,
    };
    let targetSVG = document.querySelector("#targetSVGElement") as HTMLElement;

    setInterval(() => {
        currentColor.h = (currentColor.h + 1) % 360;
        if (currentColor.h === 0 || currentColor.h === 180) {
            currentColor.s = (currentColor.s + 1) % 100;
            if (currentColor.s === 0 || currentColor.s === 50) {
                currentColor.l = (currentColor.l + 1) % 100;
            }
        }

        targetSVG.style.fill = `hsl(${currentColor.h}, ${currentColor.s}%, ${currentColor.l}%)`;
    }, 50);
</script>
