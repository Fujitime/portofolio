---
export interface Props {
	title: string;
	text: string;
}

const { title, text } = Astro.props;
---

<template id="toast-template">
	<div
		id="toast-body"
		class="toast toast-top toast-end translate-y-0 transition-all duration-500"
		style="z-index: 999;"
	>
		<div class="alert shadow-lg">
			<div class="max-w-xs">
				<div class="mx-2">
					<h3 class="font-bold">Exciting Changes Ahead!</h3>
					<div class="text-xs mt-1">
						Don't worry, we're just sprucing things up to make your browsing experience
						even better! Stay tuned for our grand reveal!
					</div>
				</div>
			</div>
			<div class="flex-none">
				<button class="btn btn-sm" onclick="removeToast()">Roger!</button>
			</div>
		</div>
	</div>
</template>

<script is:inline>
	let template = document.querySelector("#toast-template");

	window.onload = () => {
		setTimeout(() => {
			document.body.appendChild(template.content.cloneNode(true));
		}, 3000);
	};

	setTimeout(() => {
		removeToast();
	}, 11 * 1000);

	function removeToast() {
		let toast = document.querySelector("#toast-body");
		toast.style.transform = "translateY(-200%)";
		setTimeout(() => {
			toast && toast.remove();
		}, 500);
	}
</script>
