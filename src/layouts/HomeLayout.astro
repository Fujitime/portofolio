---
import "../styles/style.css";
const pageTitle = Astro.props.pageTitle;
---

<!DOCTYPE html>
<html lang="id" class="dark:bg-primary dark:text-white">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<link rel="shortcut icon" href="favicon.svg" type="image/x-icon">
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			rel="stylesheet"
			href="https://fonts.googleapis.com/css2?family=Mulish:wght@100;300;400;500;700;800&display=swap"
		/>
		<title>{pageTitle}</title>
	</head>
	<body class="dark:bg-primary dark:text-white">
		<div class="curzr" hidden>
			<div class="curzr-dot"></div>
		</div>

		<div class="h-screen">
			<slot />
		</div>
	</body>
	<script>
		const original = document.title;

		document.addEventListener("visibilitychange", function () {
			if (document.visibilityState === "visible") {
				document.title = "Yay you're back!";
				setTimeout(() => {
					document.title = original;
				}, 5000);
			} else {
				setTimeout(() => {
					document.title = "Are you still there?";
				}, 10000);
			}
		});

		/*eslint-disable */
		class RingDot { constructor() { this.root = document.body; this.cursor = document.querySelector(".curzr"); this.dot = document.querySelector(".curzr-dot"); this.pointerX = 0; this.pointerY = 0; this.cursorSize = 40; this.cursorStyle = { boxSizing: "border-box", position: "fixed", display: "flex", top: `${this.cursorSize / -2}px`, left: `${this.cursorSize / -2}px`, zIndex: "2147483647", justifyContent: "center", alignItems: "center", width: `${this.cursorSize}px`, height: `${this.cursorSize}px`, backgroundColor: "#fff0", boxShadow: "0 0 0 1.25px #111920, 0 0 0 2.25px #F2F5F8", borderRadius: "50%", transition: "200ms, transform 200ms", userSelect: "none", pointerEvents: "none", }; this.dotStyle = { boxSizing: "border-box", position: "fixed", zIndex: "2147483647", width: "4px", height: "4px", backgroundColor: "#111920", boxShadow: "0 0 0 1px #F2F5F8", borderRadius: "50%", userSelect: "none", pointerEvents: "none", }; this.init(this.cursor, this.cursorStyle); this.init(this.dot, this.dotStyle); } init(el, style) { Object.assign(el.style, style); this.cursor.removeAttribute("hidden"); } move(event) { if ( event.target.localName === "button" || event.target.localName === "a" || event.target.onclick !== null || event.target.className.includes("curzr-hover") ) { this.hover(60); } else { this.hoverout(); } this.pointerX = event.pageX + this.root.getBoundingClientRect().x; this.pointerY = event.pageY + this.root.getBoundingClientRect().y; this.cursor.style.transform = `translate3d(${this.pointerX}px, ${this.pointerY}px, 0)`; } hover(radius) { this.cursor.style.width = this.cursor.style.height = `${radius}px`; this.cursor.style.top = this.cursor.style.left = `${radius / -2}px`; this.cursor.style.opacity = "0.2"; } hoverout() { this.cursor.style.width = this.cursor.style.height = `${this.cursorSize}px`; this.cursor.style.top = this.cursor.style.left = `${this.cursorSize / -2}px`; this.cursor.style.opacity = "1"; } click() { this.cursor.style.transform += ` scale(0.5)`; setTimeout(() => { this.cursor.style.transform = this.cursor.style.transform.replace( ` scale(0.5)`, "" ); }, 35); } remove() { this.cursor.remove(); this.dot.remove(); } } (() => { const cursor = new RingDot(); if ( !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test( navigator.userAgent ) ) { document.onmousemove = function (event) { cursor.move(event); }; document.onclick = function () { cursor.click(); }; } else { cursor.remove(); } })();
		/*eslint-enable */
	</script>
</html>
